}
# [Output]
# "With alpha =  0.05 , we reject the null hypothesis."
# (b) What is the p value associated with this test?
# [Solution]
p = pt(t, df=n-1)
print(paste("p value =", p))
# [Output]
# "p value = 0.99992964974271"
# (c) Discuss the practical uses of the results of this statistical test.
# [Solution]
# Homework 1 - Problem 4
# A standardized test for a specific college course is constructed so that
# the distribution of grades should have mu = 100 and sigma = 10.
# A class of 30 students has a mean grade of 92.
mu = 100
sigma = 10
n = 30
sampleMean = 92
# (a) Test the null hypothesis that the grades from this class
# are a random sample from the stated distribution. (Use alpha = 0.05.)
# [Solution]
# The sample size is 30, therefore, we use t-test with 2-tail
# Ho: There are no difference between the class mean and the sigma
# H1: There are an significant difference between the class mean and the sigma
alpha = 0.05
t = (mu - sampleMean) / (sigma/sqrt(n))
tAlpha = qt(1-alpha/2, df=n-1)
criticalRegion = c(-tAlpha, tAlpha)
if (t >= criticalRegion[1] && t <= criticalRegion[2]) {
print(paste("With alpha = ", alpha, ", we accept the null hypothesis."))
} else {
print(paste("With alpha = ", alpha, ", we reject the null hypothesis."))
}
# [Output]
# "With alpha =  0.05 , we reject the null hypothesis."
# (b) What is the p value associated with this test?
# [Solution]
p = pt(-t, df=n-1)
print(paste("p value =", p))
# [Output]
# "p value = 0.99992964974271"
# (c) Discuss the practical uses of the results of this statistical test.
# [Solution]
source('~/Google Drive (tunghuynh314)/school/COCS 6323/HW1/Scripts/P4.R', echo=TRUE)
# Homework 1 - Problem 4
# A standardized test for a specific college course is constructed so that
# the distribution of grades should have mu = 100 and sigma = 10.
# A class of 30 students has a mean grade of 92.
mu = 100
sigma = 10
n = 30
sampleMean = 92
# (a) Test the null hypothesis that the grades from this class
# are a random sample from the stated distribution. (Use alpha = 0.05.)
# [Solution]
# The sample size is 30, therefore, we use t-test with 2-tail
# Ho: There are no difference between the class mean and the sigma
# H1: There are an significant difference between the class mean and the sigma
alpha = 0.05
t = (sampleMean - mu) / (sigma/sqrt(n))
tAlpha = qt(1-alpha/2, df=n-1)
criticalRegion = c(-tAlpha, tAlpha)
if (t >= criticalRegion[1] && t <= criticalRegion[2]) {
print(paste("With alpha = ", alpha, ", we accept the null hypothesis."))
} else {
print(paste("With alpha = ", alpha, ", we reject the null hypothesis."))
}
# [Output]
# "With alpha =  0.05 , we reject the null hypothesis."
# (b) What is the p value associated with this test?
# [Solution]
p = pt(t, df=n-1)
print(paste("p value =", p))
# [Output]
# "p value = 0.99992964974271"
# (c) Discuss the practical uses of the results of this statistical test.
# [Solution]
CPIs <- c(3.0, 2.6, 2.8, 3.0, 2.3, 1.6, 2.2, 3.4, 2.8, 1.6, 2.3, 2.7, 3.4, 3.2, 2.8)
sort(CPIs)
sum(CPIs)
fivenum(CPIs)
fnums <- fivenum(CPIs)
fnums[2]
fnums[4]
?fivenum
?boxplot
?points
?boxplot
?
mar
?mar
?par
?axis
?boxplot
CI = 0.95
alpha = 1 - CI
sigma = 40
z = qnorm(alpha/2)
# Homework 1 - Problem 5
# What sample size is required for a maximum error of estimation of 10
# for a population whose standard deviation is 40 using a confidence interval
# of 0.95? How much larger must the sample size be if the maximum error is to be 5?
CI = 0.95
alpha = 1 - CI
sigma = 40
z = qnorm(alpha/2)
# a) Maximum error is 10
# [Solution]
maxError1 = 10
n1 = ceiling(((z * sigma)^2)/(maxError1^2))
# [Output]
# n1 = 62
# b) Maximum error is 5
# [Solution]
maxError2 = 5
n2 = ceiling(((z * sigma)^2)/(maxError2^2))
# [Output]
# n2 = 246
alpha = 0.05
t = (sampleMean - mu) / (sigma/sqrt(n))
tAlpha = qt(1-alpha/2, df=n-1)
tAlpha = qt(alpha/2, df=n-1)
alpha = 0.05
t = (sampleMean - mu) / (sigma/sqrt(n))
tAlpha = qt(1-alpha/2, df=n-1)
tAlpha1 = qt(alpha/2, df=n-1)
# Homework 1 - Problem 4
# A standardized test for a specific college course is constructed so that
# the distribution of grades should have mu = 100 and sigma = 10.
# A class of 30 students has a mean grade of 92.
mu = 100
sigma = 10
n = 30
sampleMean = 92
# (a) Test the null hypothesis that the grades from this class
# are a random sample from the stated distribution. (Use alpha = 0.05.)
# [Solution]
# The sample size is 30, therefore, we use t-test with 2-tail
# Ho: There are no difference between the class mean and the sigma
# H1: There are an significant difference between the class mean and the sigma
alpha = 0.05
t = (sampleMean - mu) / (sigma/sqrt(n))
tAlpha = qt(1-alpha/2, df=n-1)
criticalRegion = c(-tAlpha, tAlpha)
if (t >= criticalRegion[1] && t <= criticalRegion[2]) {
print(paste("With alpha = ", alpha, ", we accept the null hypothesis."))
} else {
print(paste("With alpha = ", alpha, ", we reject the null hypothesis."))
}
# [Output]
# "With alpha =  0.05 , we reject the null hypothesis."
# (b) What is the p value associated with this test?
# [Solution]
p = pt(t, df=n-1)
print(paste("p value =", p))
# [Output]
# "p value = 7.03502572901089e-05"
# (c) Discuss the practical uses of the results of this statistical test.
# [Solution]
150,000 - (1 + 5 + 25 + 1000)
150000 - (1 + 5 + 25 + 1000)
1/1500
5/1500
25/1500
1000/1500
1000/150000
1/150
148969 / 1500
# Homework 1 - Problem 3
totalTickets <- 150000
firstPrize <- 50000
secondPrize <- 10000
thirdPrize <- 1000
forthPrize <- 10
noPrize <- 0
numFirstPrize <- 1
numSecondPrize <- 5
numThirdPrize <- 25
numForthPrize <- 1000
numNoPrize <- totalTickets - sum(numFirstPrize, numSecondPrize, numThirdPrize, numForthPrize)
prizeValues <- c(firstPrize, secondPrize, thirdPrize, forthPrize, noPrize)
prizeCounts <- c(numFirstPrize, numSecondPrize, numThirdPrize, numForthPrize, numNoPrize)
prizePercentages <- prizeCounts / totalTickets
# i) Let Y be the winning amount of a randomly drawn lottery ticket. Describe the probability distribution of Y.
# [Solution]
print(prizeCounts)
print(prizePercentages)
# [Output]
# 1      5     25   1000 148969
# 6.666667e-06 3.333333e-05 1.666667e-04 6.666667e-03 9.931267e-01
# ii) Compute the mean expected value of the ticket.
# [Solution]
meanExpected = sum(prizeValues * prizeCounts) / totalTickets
print(paste("Mean Expected = ", meanExpected))
# [Output]
# "Mean Expected =  0.9"
# iii) If the ticket costs $1.00, is the purchase of the ticket worthwhile? Explain your answer.
# [Solution]
ticketPrice <- 1.0
gainValues <- prizeValues - ticketPrice
meanExpectedGainValue = sum(gainValues * prizeCounts) / totalTickets
print(paste("Mean Expected Gaining Value = ", meanExpectedGainValue))
# [Output]
# "Mean Expected Gaining Value =  -0.1"
# iv) iv. Compute the standard deviation of this distribution.
# Comment on the usefulness of the standard deviation
# as a measure of dispersion for this distribution.
# [Solution]
variance <- (sum(prizeCounts * (prizeValues - meanExpected)^2)) / totalTickets
sd <- sqrt(variance)
print(paste("Standard deviation = ", round(sd, digit=2)))
# [Output]
# "Standard deviation =  142.01"
# Homework 1 - Problem 5
# What sample size is required for a maximum error of estimation of 10
# for a population whose standard deviation is 40 using a confidence interval
# of 0.95? How much larger must the sample size be if the maximum error is to be 5?
CI = 0.95
alpha = 1 - CI
sigma = 40
z = qnorm(alpha/2)
# a) Maximum error is 10
# [Solution]
maxError1 = 10
n1 = ceiling(((z * sigma)^2)/(maxError1^2))
# [Output]
# n1 = 62
# b) Maximum error is 5
# [Solution]
maxError2 = 5
n2 = ceiling(((z * sigma)^2)/(maxError2^2))
# [Output]
# n2 = 246
# Homework 1 - Problem 5
# What sample size is required for a maximum error of estimation of 10
# for a population whose standard deviation is 40 using a confidence interval
# of 0.95? How much larger must the sample size be if the maximum error is to be 5?
CI = 0.95
alpha = 1 - CI
sigma = 40
z = qnorm(alpha/2)
# a) Maximum error is 10
# [Solution]
maxError1 = 10
n1 = ((z * sigma)^2)/(maxError1^2)
n1_ = ceiling(n1)
# [Output]
# n1 = 62
# b) Maximum error is 5
# [Solution]
maxError2 = 5
n2 = ((z * sigma)^2)/(maxError2^2)
n2_ = ceiling(n2)
# [Output]
# n2 = 246
# Homework 1 - Problem 4
# A standardized test for a specific college course is constructed so that
# the distribution of grades should have mu = 100 and sigma = 10.
# A class of 30 students has a mean grade of 92.
mu = 100
sigma = 10
n = 30
sampleMean = 92
# (a) Test the null hypothesis that the grades from this class
# are a random sample from the stated distribution. (Use alpha = 0.05.)
# [Solution]
# The sample size is 30, therefore, we use t-test with 2-tail
# Ho: There are no difference between the class mean and the sigma
# H1: There are an significant difference between the class mean and the sigma
alpha = 0.05
t = (sampleMean - mu) / (sigma/sqrt(n))
tAlpha = qt(1-alpha/2, df=n-1)
criticalRegion = c(-tAlpha, tAlpha)
if (t >= criticalRegion[1] && t <= criticalRegion[2]) {
print(paste("With alpha = ", alpha, ", we accept the null hypothesis."))
} else {
print(paste("With alpha = ", alpha, ", we reject the null hypothesis."))
}
# [Output]
# "With alpha =  0.05 , we reject the null hypothesis."
# (b) What is the p value associated with this test?
# [Solution]
p = pt(t, df=n-1)
print(paste("p value =", p))
# [Output]
# "p value = 7.03502572901089e-05"
# (c) Discuss the practical uses of the results of this statistical test.
# [Solution]
# Homework 1 - Problem 4
# A standardized test for a specific college course is constructed so that
# the distribution of grades should have mu = 100 and sigma = 10.
# A class of 30 students has a mean grade of 92.
mu = 100
sigma = 10
n = 30
sampleMean = 92
# (a) Test the null hypothesis that the grades from this class
# are a random sample from the stated distribution. (Use alpha = 0.05.)
# [Solution]
# The sample size is 30, therefore, we use t-test with 2-tail
# Ho: There are no difference between the class mean and the sigma
# H1: There are an significant difference between the class mean and the sigma
alpha = 0.05
t = (sampleMean - mu) / (sigma/sqrt(n))
tAlpha = qt(1-alpha/2, df=n-1)
criticalRegion = c(-tAlpha, tAlpha)
if (t >= criticalRegion[1] && t <= criticalRegion[2]) {
print(paste("With alpha = ", alpha, ", we accept the null hypothesis."))
} else {
print(paste("With alpha = ", alpha, ", we reject the null hypothesis."))
}
# [Output]
# "With alpha =  0.05 , we reject the null hypothesis."
# (b) What is the p value associated with this test?
# [Solution]
p = pt(t, df=n-1)
print(paste("p value =", p))
# [Output]
# "p value = 7.03502572901089e-05"
# (c) Discuss the practical uses of the results of this statistical test.
# [Solution]
# Homework 1 - Problem 5
# What sample size is required for a maximum error of estimation of 10
# for a population whose standard deviation is 40 using a confidence interval
# of 0.95? How much larger must the sample size be if the maximum error is to be 5?
CI = 0.95
alpha = 1 - CI
sigma = 40
z = qnorm(alpha/2)
# a) Maximum error is 10
# [Solution]
maxError1 = 10
n1 = ((z * sigma)^2)/(maxError1^2)
N1 = ceiling(n1)
# [Output]
# n1 = 62
# b) Maximum error is 5
# [Solution]
maxError2 = 5
n2 = ((z * sigma)^2)/(maxError2^2)
N2 = ceiling(n2)
# [Output]
# n2 = 246
# Homework 1 - Problem 5
# What sample size is required for a maximum error of estimation of 10
# for a population whose standard deviation is 40 using a confidence interval
# of 0.95? How much larger must the sample size be if the maximum error is to be 5?
CI = 0.95
alpha = 1 - CI
sigma = 40
z = qnorm(alpha/2)
# a) Maximum error is 10
# [Solution]
maxError1 = 10
n1 = ((z * sigma)^2)/(maxError1^2)
N1 = ceiling(n1)
# [Output]
# n1 = 62
# b) Maximum error is 5
# [Solution]
maxError2 = 5
n2 = ((z * sigma)^2)/(maxError2^2)
N2 = ceiling(n2)
# [Output]
# n2 = 246
# Homework 1 - Problem 2
# a)
# [Solution]
years <- c(1993:2007)
CPIs <- c(3.0, 2.6, 2.8, 3.0, 2.3, 1.6, 2.2, 3.4, 2.8, 1.6, 2.3, 2.7, 3.4, 3.2, 2.8)
nYears <- length(years)
par(las=2, crt=45, srt=45, ps=12)
plot(years,
CPIs,
type="n",
# xaxt="n",
xaxs="r",
xlab="Year",
ylab="% change in CPI",
main="The percentage change in the average CPI from 1994 to 2007",
cex.lab=0.8,
cex.axis=0.8,
cex.main=0.8,
cex.sub=0.8,
xlim = c(1993, 2007),
ylim = c(1.5, 3.5))
lines(years, CPIs, type='b', pch=16)
axis(1,at=c(1:15),label=c(1:15))
# axis(side=1, at=seq(1,nYears,2), labels=years[seq(1,nYears,2)], cex.axis=0.6)
# axis(side=1, at=seq(2,nYears,2), labels=years[seq(2,nYears,2)], cex.axis=0.6)
# b)
# [Solution]
print(paste('Mean of the CPI =', mean(CPIs)))
print(paste('Median of the CPI =', median(CPIs)))
print(paste('Standard deviation of the CPI =', sd(CPIs)))
# c)
# [Solution]
fnums <- fivenum(CPIs)
IQR <- fnums[4] - fnums[2]
lowerInnerFence <- fnums[2] - 1.5 * IQR
upperInnerFence <- fnums[4] + 1.5 * IQR
lowerOuterFence <- fnums[2] - 3.0 * IQR
upperOuterFence <- fnums[4] + 3.0 * IQR
print(paste("Lower inner fence: Q1 – (1.5 * IQR) =", lowerInnerFence))
print(paste("Upper inner fence: Q3 + (1.5 * IQR) =", upperInnerFence))
print(paste("Lower outer fence: Q1 – (3 * IQR) =", lowerOuterFence))
print(paste("Upper outer fence: Q3 + (3 * IQR) =", upperOuterFence))
isOutlier <- function(x) {
if(x < lowerInnerFence || x > upperInnerFence) return(TRUE) else return(FALSE)
}
isOutlier = Vectorize(isOutlier)
outliers <- CPIs[isOutlier(CPIs)]
if(length(outliers) > 0) {
print("Outliers: ")
print(outliers)
} else {
print("There is no outliers")
}
# d)
# [Solution]
par(mar=c(2, 4, 0.5, 2))
boxplot(CPIs,
horizontal=T,
# xlab="% change in CPI",
las=1,
axes=F,
boxwex=1)
axis(1,cex.axis=0.5)
points(1, x=mean(CPIs), col="red", pch=8)
?prop.test
prop.test(13173, 25468, p=0.5, alt="greater", correct=FALSE)
13173/ 25468
t.test
?t.test
prop.test(13, 20, p=0.5, alt="greater", correct=F)
prop.test(13, 20, p=0.5, correct=F)
qchisq
qchisq(0.95, 8)
x = c(0.593, 0.142, 0.329, 0.691, 0.231, 0.793, 0.519, 0.392, 0.418)
m = mean(x)
m
t = (m-0.3)/(sd(x)/sqrt(9))
t
?qt
qt(0.975)
qt(0.975, df=8)
t.test
?t.test
t.test(x, alternative = "greater", mu=0.3)
pt(t)
pt(t, df=8)
qt(t, df=8)
0.9707348 + 0.02927
t.test(x, mu=0.3)
t.test(x, alternative = "less", mu=0.3)
pt(t)
pt(t, df-8)
pt(t, df=8)
?pt
pt(t, df=8, lower.tail = F)
prop.test
?prop.test
install.packages("dplyr")
library(dplyr)
pwd
pwd()
getpwd()
getwd()
setwd("/Users/magicii/Google\ Drive\ \(tunghuynh314\)/school/COCS\ 6323/Week\ 4")
setwd("/Users/magicii/Google Drive (tunghuynh314)/school/COCS 6323/Week 4")
getwd()
ls
ls()
read.csv("mtcarss.csv")
df = read.csv("mtcarss.csv")
df <0 read.csv("mtcarss.csv")
df <- read.csv("mtcarss.csv")
str(df)
filter(df, cyl>8)
filter(df, cyl>6)
source('~/.active-rstudio-document', echo=TRUE)
setwd("/Users/magicii/Google Drive (tunghuynh314)/school/COCS 6323/Week 4")
df <- read.csv("mtcarss.csv")
dim(df)
str(df)
df %>% filter(cyl > 4)
n(df)
df %>% summarise(mean_mpg=mean(mpg))
df %>% summarise(mean_mpg=mean(mpg), total_data=n())
df %>% summarise(mean_mpg=mean(mpg), total_data=n())
?arrange
gg <- read.csv("./data/Faculty_GoogleScholar_Funding_Data_N4190.csv")
head(gg)
df %>% group_by(dept) %>% summarise(total=n())
gg %>% group_by(dept) %>% summarise(total=n())
df %>% group_by(cyl) %>% summarise(total=n())
df %>% group_by(cyl>4) %>% summarise(total=n())
df %>% group_by(cyl>4, cyl<4) %>% summarise(total=n())
df %>% group_by(cyl>4, cyl<=4) %>% summarise(total=n())
df %>% group_by(cyl<4, cyl=4, cyl>4) %>% summarise(total=n())
head(gg)
str(gg)
library(jpeg)
install.packages()
install.packages('jpeg')
getwd()
setwd('~/git/ml/pca-image')
moon <- readJPEG('cat.jpg')
moon <- readJPEG('moon.jpg')
moon <- readJPEG('moon.jpge')
library(jpeg)
